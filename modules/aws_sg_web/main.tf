# Import SG Rule definitions
module "sg-rules" {
  source = "../sg-rules"
}

# Set Local vars
locals {
  create = true

  # Assign the rule definitions to local vars for readability
  sg_rules  = module.sg-rules.rules
  sg_groups = module.sg-rules.groups
}

# Retrive VPC
data "aws_vpc" "this" {
  id = var.vpc_id
}

# Create Test SG
resource "aws_security_group" "sg-web-test" {
  description = "SG Rule Mapping Testing (can delete)"
  vpc_id      = data.aws_vpc.this.id
}

# Create Ingress Rules for Web
resource "aws_vpc_security_group_ingress_rule" "aws-web" {
  count = local.create ? length(local.sg_groups.web.ingress_rules) : 0

  # Provided by Input
  security_group_id = aws_security_group.sg-web-test.id
  cidr_ipv4         = var.ingress_cidr_ipv4
  
  # Generated by sg-rules
  from_port      = local.sg_rules[local.sg_groups.web.ingress_rules[count.index]][0]
  to_port        = local.sg_rules[local.sg_groups.web.ingress_rules[count.index]][1]
  ip_protocol    = local.sg_rules[local.sg_groups.web.ingress_rules[count.index]][2]
  description    = local.sg_rules[local.sg_groups.web.ingress_rules[count.index]][3]
}

# Create Egress Rules for Web
resource "aws_vpc_security_group_egress_rule" "aws-web" {
  count = local.create ? length(local.sg_groups.web.egress_rules) : 0

  # Provided by Input
  security_group_id = aws_security_group.sg-web-test.id
  cidr_ipv4         = var.egress_cidr_ipv4
  
  # Generated by sg-rules
  from_port      = local.sg_rules[local.sg_groups.web.egress_rules[count.index]][0]
  to_port        = local.sg_rules[local.sg_groups.web.egress_rules[count.index]][1]
  ip_protocol    = local.sg_rules[local.sg_groups.web.egress_rules[count.index]][2]
  description    = local.sg_rules[local.sg_groups.web.egress_rules[count.index]][3]
}